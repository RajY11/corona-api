{"ast":null,"code":"var _jsxFileName = \"D:\\\\CoronaTracker\\\\userapp\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: []\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:8080/data').then(res => res.json()).then(json => {\n      this.setState({\n        data: json\n      });\n    });\n  }\n\n  render() {\n    var {\n      data\n    } = this.state;\n    var count = 0;\n    let totalCases = 0;\n    let totalDeaths = 0;\n    let totalRecovered = 0;\n    data.map(d => {\n      totalCases = totalCases + d.confirmed;\n      totalDeaths = totalDeaths + d.death;\n      totalRecovered = totalRecovered + d.recovered;\n      deathPercenteage = (totalDeaths / totalRecovered * 100).toFixed(2);\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"nav\", {\n      class: \"navbar navbar-light bg-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      class: \"navbar-brand mb-0 h1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    }, \"Corona Data\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 64\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      class: \"navbar-brand mb-0 h1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 5\n      }\n    }, \"Total cases : \", totalCases, \" | Total Deaths : \", totalDeaths, \" with \", deathPercenteage, \" %|Total Recovered : \", totalRecovered)), /*#__PURE__*/React.createElement(\"table\", {\n      class: \"table table-striped table-dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 15\n      }\n    }, \"Id\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 15\n      }\n    }, \"country\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 15\n      }\n    }, \"Confirmed\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 15\n      }\n    }, \"Death\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 15\n      }\n    }, \"Death %\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 15\n      }\n    }, \"Recovered\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 15\n      }\n    }, \"Recovered %\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    }, data.map(d => /*#__PURE__*/React.createElement(\"tr\", {\n      key: d.country1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }\n    }, count += 1), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 15\n      }\n    }, d.country1), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 15\n      }\n    }, d.confirmed), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 15\n      }\n    }, d.death, \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 15\n      }\n    }, (d.death / d.confirmed * 100).toFixed(2), \"(%)\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 15\n      }\n    }, d.recovered), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 15\n      }\n    }, (d.recovered / d.confirmed * 100).toFixed(2), \"(%)\"))))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:/CoronaTracker/userapp/src/App.js"],"names":["React","Component","App","constructor","props","state","data","componentDidMount","fetch","then","res","json","setState","render","count","totalCases","totalDeaths","totalRecovered","map","d","confirmed","death","recovered","deathPercenteage","toFixed","country1"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\n\nclass App extends Component{\n\n  constructor(props){\n    super(props);\n    this.state = {\n      data : []\n    }\n  }\n\n  componentDidMount(){\n      fetch('http://localhost:8080/data')\n        .then(res => res.json())\n        .then(json => {\n            this.setState({\n              data : json\n            })\n        });\n  }\n\n  render(){\n\n    var {data} = this.state;\n    var count =0;\n    let totalCases=0;\n    let totalDeaths=0;\n    let totalRecovered=0;\n\n    data.map(d=> {\n        totalCases = totalCases + d.confirmed;\n        totalDeaths = totalDeaths + d.death;\n        totalRecovered = totalRecovered +d.recovered; \n        deathPercenteage = ((totalDeaths/totalRecovered)*100).toFixed(2);\n        }\n      )\n    return(\n      <div className =\"App\">\n        <nav class=\"navbar navbar-light bg-light\">\n          <span class=\"navbar-brand mb-0 h1\">Corona Data</span><br/>\n    <span class=\"navbar-brand mb-0 h1\">Total cases : {totalCases} | Total Deaths : {totalDeaths} with {deathPercenteage} %|Total Recovered : {totalRecovered}</span>\n\n        </nav>\n        <table class=\"table table-striped table-dark\">\n          <thead>\n            <tr>\n              <th scope=\"col\">Id</th>\n              <th scope=\"col\">country</th>\n              \n              <th scope=\"col\">Confirmed</th>\n              <th scope=\"col\">Death</th>\n              <th scope=\"col\">Death %</th>\n              <th scope=\"col\">Recovered</th>\n              <th scope=\"col\">Recovered %</th>\n            </tr>\n          </thead>\n          <tbody>\n          {data.map(d=>(\n            <tr key={d.country1}>\n              \n          <td>{count+=1}</td>\n              <td>{d.country1}</td>\n              \n              <td>{d.confirmed}</td>\n              <td>{d.death} </td>\n              <td>{((d.death/d.confirmed)*100).toFixed(2)}(%)</td>\n              <td>{d.recovered}</td>\n              <td>{((d.recovered/d.confirmed)*100).toFixed(2)}(%)</td>\n            </tr>\n          ))}\n          </tbody>\n        </table>\n       </div>\n    )\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}