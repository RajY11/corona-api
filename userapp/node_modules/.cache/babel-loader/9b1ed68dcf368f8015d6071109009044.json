{"ast":null,"code":"var _jsxFileName = \"D:\\\\CoronaTracker\\\\userapp\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport axious from 'axios';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      data2: [],\n      email: \"\",\n      countries: \"\",\n      selectedCountries: []\n    };\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCountryChange = this.handleCountryChange.bind(this);\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:8080/data').then(res => res.json()).then(json => {\n      this.setState({\n        data: json,\n        data2: json\n      });\n    });\n  }\n\n  handleEmailChange(e) {\n    this.setState({\n      email: e.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    if (this.state.email != null && this.state.countries != null) {\n      axious.post(\"http://localhost:8080/subscribe\", {\n        \"emailId\": this.state.email,\n        \"countries\": [this.state.countries]\n      }).then(response => {\n        console.log(response);\n        alert(\"Success, you can add more countires if you want\");\n      }).catch(error => {\n        alert(error);\n        console.log(error);\n      });\n    }\n  }\n\n  handleCountryChange(e) {\n    var listOfCountries = this.state.selectedCountries;\n    listOfCountries.push(e.target.value);\n    this.setState({\n      selectedCountries: listOfCountries\n    });\n    this.setState({\n      countries: e.target.value\n    });\n  }\n\n  render() {\n    var {\n      data\n    } = this.state;\n    var {\n      data2\n    } = this.state;\n    var {\n      selectedCountries\n    } = this.state;\n    var count = 0;\n    let totalCases = 0;\n    let totalDeaths = 0;\n    let totalRecovered = 0;\n    const formatter = new Intl.NumberFormat('en');\n    data.map(d => {\n      totalCases = totalCases + d.confirmed;\n      totalDeaths = totalDeaths + d.death;\n      totalRecovered = totalRecovered + d.recovered;\n    });\n    let deathPercenteage = (totalDeaths / totalCases * 100).toFixed(2);\n    let recoverPercenteage = (totalRecovered / totalCases * 100).toFixed(2);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"nav\", {\n      className: \"navbar navbar-light bg-light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"navbar-brand mb-0 h1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }\n    }, \"Corona Data\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 68\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"navbar-brand mb-0 h1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }\n    }, \"Total cases : \", formatter.format(totalCases), \" | Total Deaths : \", formatter.format(totalDeaths), \" with \", deathPercenteage, \" %|Total Recovered : \", formatter.format(totalRecovered), \" with \", recoverPercenteage, \" %\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"navbar-brand mb-0 h1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    }, \"You can subscribe with your email to get alerts of speicific country on your choice\"), /*#__PURE__*/React.createElement(\"form\", {\n      className: \"input-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"navbar-brand mb-0 h1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"font-weight-normal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 15\n      }\n    }, \"Enter email :\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"email\",\n      name: \"email\",\n      className: \"btn btn-light\",\n      placeholder: \"Email\",\n      onChange: this.handleEmailChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 75\n      }\n    }), /*#__PURE__*/React.createElement(\"select\", {\n      name: \"country\",\n      className: \"btn btn-light\",\n      placeholder: \"country\",\n      onChange: e => {\n        this.setState({\n          countries: e.target.value\n        });\n\n        if (e.target.value === \"ALL\") {\n          this.setState({\n            data2: data\n          });\n        } else {\n          this.setState({\n            data2: data.filter(d => d.country1 === e.target.value)\n          });\n        }\n\n        var listOfCountries = this.state.selectedCountries;\n        listOfCountries.push(e.target.value);\n        this.setState({\n          selectedCountries: listOfCountries\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      key: \"ALL\",\n      value: \"ALL\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 33\n      }\n    }, \"All\"), data.map(d => /*#__PURE__*/React.createElement(\"option\", {\n      key: d.country1,\n      value: d.country1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 34\n      }\n    }, d.country1))), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      className: \"btn btn-dark\",\n      value: \"Subscribe\",\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 15\n      }\n    }, \"selectedCountries are \", selectedCountries.value)))), /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table table-striped table-dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 15\n      }\n    }, \"Id\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 15\n      }\n    }, \"Country\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 15\n      }\n    }, \"Active Cases\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 15\n      }\n    }, \"Confirmed\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 15\n      }\n    }, \"Death\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 15\n      }\n    }, \"Death %\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 15\n      }\n    }, \"Recovered\"), /*#__PURE__*/React.createElement(\"th\", {\n      scope: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 15\n      }\n    }, \"Recovered %\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }\n    }, data2.map(d => /*#__PURE__*/React.createElement(\"tr\", {\n      key: d.country1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }\n    }, count += 1), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 15\n      }\n    }, d.country1), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 15\n      }\n    }, formatter.format(d.confirmed - (d.death + d.recovered))), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 15\n      }\n    }, formatter.format(d.confirmed), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 15\n      }\n    }, formatter.format(d.death), \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 15\n      }\n    }, (d.death / d.confirmed * 100).toFixed(2), \"%\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 15\n      }\n    }, formatter.format(d.recovered)), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 15\n      }\n    }, (d.recovered / d.confirmed * 100).toFixed(2), \"%\"))))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:/CoronaTracker/userapp/src/App.js"],"names":["React","Component","axious","App","constructor","props","state","data","data2","email","countries","selectedCountries","handleEmailChange","bind","handleSubmit","handleCountryChange","componentDidMount","fetch","then","res","json","setState","e","target","value","event","post","response","console","log","alert","catch","error","listOfCountries","push","render","count","totalCases","totalDeaths","totalRecovered","formatter","Intl","NumberFormat","map","d","confirmed","death","recovered","deathPercenteage","toFixed","recoverPercenteage","format","filter","country1"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axious from 'axios';\nimport './App.css';\n\n\nclass App extends Component{\n\n  constructor(props){\n    super(props);\n    this.state = {\n      data : [],\n      data2 :[],\n      email : \"\",\n      countries :\"\",\n      selectedCountries:[]\n    };\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCountryChange = this.handleCountryChange.bind(this);\n  }\n\n  componentDidMount(){\n      fetch('http://localhost:8080/data')\n        .then(res => res.json())\n        .then(json => {\n            this.setState({\n              data : json,\n              data2: json\n            })\n        });\n  }\n  handleEmailChange(e){\n    this.setState({email:e.target.value});\n    \n  }\n\n  handleSubmit(event) {\n    \n    if(this.state.email != null && this.state.countries!=null){\n      axious.post(\"http://localhost:8080/subscribe\" , {\"emailId\" : this.state.email , \"countries\" : [this.state.countries]})\n              .then(response => {\n                console.log(response );\n                alert(\"Success, you can add more countires if you want\");\n              })\n              .catch(error=>{\n                alert(error);\n                console.log(error);\n              })\n    }\n\n  }\n\n  handleCountryChange(e) {\n    var listOfCountries = this.state.selectedCountries;\n    listOfCountries.push(e.target.value);\n    this.setState({selectedCountries:listOfCountries});\n    this.setState({countries:e.target.value});\n  }\n\n  render(){\n\n    var {data} = this.state;\n    var {data2} = this.state;\n    var {selectedCountries} = this.state;\n    var count =0;\n    let totalCases=0;\n    let totalDeaths=0;\n    let totalRecovered=0;\n    const formatter = new Intl.NumberFormat('en');\n    \n    \n\n    data.map(d=> {\n        totalCases = totalCases + d.confirmed;\n        totalDeaths = totalDeaths + d.death;\n        totalRecovered = totalRecovered +d.recovered; \n       \n        \n        }\n      )\n\n      let deathPercenteage = ((totalDeaths/totalCases)*100).toFixed(2);\n      let recoverPercenteage = ((totalRecovered/totalCases)*100).toFixed(2);\n    return(\n      <div className =\"App\">\n        <nav className=\"navbar navbar-light bg-light\">\n          <span className=\"navbar-brand mb-0 h1\">Corona Data</span><br/>\n          <span className=\"navbar-brand mb-0 h1\">Total cases : {formatter.format(totalCases)} | Total Deaths : {formatter.format(totalDeaths)} with {deathPercenteage} %|Total Recovered : {formatter.format(totalRecovered)} with {recoverPercenteage} %</span>\n          <span className=\"navbar-brand mb-0 h1\">You can subscribe with your email to get alerts of speicific country on your choice</span>\n          <form className=\"input-group\" >\n          <span className=\"navbar-brand mb-0 h1\">\n              <span className = \"font-weight-normal\" >Enter email :</span><input type=\"email\" name = \"email\" className =\"btn btn-light\" placeholder=\"Email\" onChange={this.handleEmailChange}/>\n              \n              <select name=\"country\" className =\"btn btn-light\" placeholder=\"country\" \n              onChange ={(e) =>{\n                this.setState({countries : e.target.value});\n                if(e.target.value===\"ALL\"){  this.setState({data2 : data})}\n                else{\n                this.setState({data2 : data.filter(d=>d.country1===e.target.value)})}\n                var listOfCountries = this.state.selectedCountries;\n                listOfCountries.push(e.target.value);\n                this.setState({selectedCountries:listOfCountries});\n              }}>\n                                <option key=\"ALL\" value=\"ALL\">All</option> \n                {data.map((d) => <option key={d.country1} value={d.country1}>{d.country1}</option>)}\n              </select>\n              <input type=\"submit\" className =\"btn btn-dark\" value = \"Subscribe\" onClick={this.handleSubmit}/> \n              <h6>selectedCountries are {selectedCountries.value}</h6>\n          </span> \n          </form>\n          \n        </nav>\n        \n        \n\n\n        <table className=\"table table-striped table-dark\">\n          <thead>\n            <tr>\n              <th scope=\"col\">Id</th>\n              <th scope=\"col\">Country</th>\n              <th scope=\"col\">Active Cases</th>\n              <th scope=\"col\">Confirmed</th>\n              <th scope=\"col\">Death</th>\n              <th scope=\"col\">Death %</th>\n              <th scope=\"col\">Recovered</th>\n              <th scope=\"col\">Recovered %</th>\n            </tr>\n          </thead>\n          <tbody>\n          {data2.map(d=>(\n            <tr key={d.country1}>\n              \n          <td>{count+=1}</td>\n              <td>{d.country1}</td>\n              <td>{formatter.format(d.confirmed - (d.death + d.recovered))}</td>\n              <td>{formatter.format(d.confirmed)} </td>\n              <td>{formatter.format(d.death)} </td>\n              <td>{((d.death/d.confirmed)*100).toFixed(2)}%</td>\n              <td>{formatter.format(d.recovered)}</td>\n              <td>{((d.recovered/d.confirmed)*100).toFixed(2)}%</td>\n            </tr>\n          ))}\n          </tbody>\n        </table>\n       </div>\n    )\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}